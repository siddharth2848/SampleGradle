/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
//apply plugin: 'application'
//apply plugin: 'eclipse'

buildscript {
    repositories {
        maven {
            url 'http://localhost:8081/artifactory/plugins-release'
            
        }
        
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.3"
    }
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'libs-release-local'
            maven = true
            
        }
    }
    resolve {
        repository {
            repoKey = 'libs-release'
            maven = true
            
        }
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    
    // https://mvnrepository.com/artifact/org.apache.poi/poi
	compile group: 'org.apache.poi', name: 'poi', version: '3.17'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
	
	// https://mvnrepository.com/artifact/org.dom4j/dom4j
	compile group: 'org.dom4j', name: 'dom4j', version: '2.0.0'
	
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
	
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas
	compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.17'
	
	// https://mvnrepository.com/artifact/org.apache.xmlbeans/xmlbeans
	compile group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '2.3.0'
	
	
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

jar {
    baseName = 'sample_project'
    version = '1.0.0'
    destinationDir = file("$buildDir/dist")
    
    //mainClassName = 'com.malhotra.file.FileRead'
    manifest{
    	attributes 'Class-Path' : configurations.runtime.files.collect { 'lib/' + it.getName() }.join(' ')
    		
    	}
    	//from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) })
    }
    


